openapi: 3.0.1
info:
  title: API проекта «Шесть городов»
  description: Список ресурсов и маршрутов сервера «Шесть городов»
  version: 1.0.0
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
tags:
  - name: offers
    description: Действия с предложениями.
  - name: comments
    description: Действия с комментариями.
  - name: users
    description: Действия с пользователем.
paths:
  /users/register:
    post:
      tags:
        - users
      summary: Регистрация пользователя
      description: Регистрирует нового пользователя.

      requestBody:
        description: Информация для создания нового пользователя.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createUser'
        required: true

      responses:
        "201":
          description: Пользователь зарегистрирован. Объект пользователя.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'

        "409":
          description: Пользователь с таким email уже существует.

  /users/login:
    post:
      tags:
        - users
      summary: Авторизация пользователя
      description: Авторизует пользователя на основе логина и пароля
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/login'
        required: true
      responses:
        "200":
          description: Удачный вход.

        "401":
          description: Неудачный вход.
    get:
      tags:
        - users
      summary: Проверка состояния пользователя
      description: Возвращает информацию по авторизованному пользователю
      responses:
        "200":
          description: Возвращается текущий статус пользователя

  /users/{userId}/avatar:
    post:
      tags:
        - users
      summary: Загрузить изображение аватара
      description: Загружает изображение аватара пользователя. Изображение
        аватара должно быть в формате `png` или `jpg`.
      responses:
        "200":
          description: ссылка на аватарку

  /offers:
    post:
      tags:
        - offers
      summary: Создание нового предложения
      description: Создает новое предложения

      responses:
        "201":
          description: Новое предложение по аренде создано

        "400":
          description: Ошибка при создании

    get:
      tags:
        - offers
      summary: Список предложений по аренде
      description: Получает список предложений
      responses:
        "200":
          description: Список предложений

  /offers/{offerId}:
    patch:
      tags:
        - offers
      summary: Редактирование предложения по аренде
      description: Редактирует предложения по аренде
      responses:
        "200":
          description: Успешно отредактировано

    delete:
      tags:
        - offers
      summary: Удаление предложения по аренде
      description: Удаляет предложения по аренде
      responses:
        "204":
          description: Успешно далено
        "404":
          description: Не найдено объявление
        "403":
            description: Нет прав на удаление

    get:
      tags:
        - offers
      summary: Детальная информация по предложению
      description: Получает детальную информацию по предложению
      responses:
        "200":
          description: Возращается деталка предложения
        "404":
          description: Не найдено объявление

  /comments/{offerId}:
    get:
      tags:
        - comments
      summary: Список комментариев для предложения
      description: Получает список комментариев для предложения
      responses:
        "200":
          description: Возращается cписок комментариев
        "404":
          description: Не найдено комментариев

    post:
      tags:
        - comments
      summary: Добавление комментария
      description: Добавляет комментарий для предложения
      responses:
        "200":
          description: Удачно создан
        "403":
          description: Нет прав на создание

components:
  schemas:
    createUser:
      type: object

      properties:
        email:
          type: string
          example: test@test.ru

        name:
          type: string
          example: test

        type:
          type: string
          example: pro

        avatarPath:
          type: string
          example: test.png

        password:
          type: string
          example: 123456

    user:
      type: object

      properties:
        id:
          type: string
          example: 434ffdf443ff

        email:
          type: string
          example: test@test.ru

    login:
      type: object

      properties:
        login:
          type: string
          example: admin

        password:
          type: string
          example: admin
